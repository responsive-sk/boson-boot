#!/usr/bin/env php
<?php
/**
 * Production Header Fix
 * Fixes malformed headers caused by Xdebug and other issues
 */

echo "üîß Fixing Production Header Issues...\n\n";

// Fix 1: Add output buffering and error suppression to index.php
echo "1. Adding production fixes to index.php...\n";

$indexPath = 'public/index.php';
$indexContent = file_get_contents($indexPath);

// Check if fixes are already applied
if (!str_contains($indexContent, 'ob_start()')) {
    // Add production fixes at the beginning
    $productionFixes = "<?php
// Production fixes for malformed headers
ob_start();
error_reporting(0);
ini_set('display_errors', 0);
ini_set('log_errors', 1);

// Disable Xdebug output in production
if (extension_loaded('xdebug')) {
    ini_set('xdebug.mode', 'off');
}

";
    
    // Replace the opening <?php tag
    $indexContent = str_replace('<?php', $productionFixes, $indexContent);
    
    // Add ob_end_flush at the end if not present
    if (!str_contains($indexContent, 'ob_end_flush()')) {
        $indexContent .= "\n// Flush output buffer\nob_end_flush();\n";
    }
    
    file_put_contents($indexPath, $indexContent);
    echo "‚úÖ Added production fixes to index.php\n";
} else {
    echo "‚úÖ Production fixes already present in index.php\n";
}

// Fix 2: Create .htaccess for Apache
echo "\n2. Creating .htaccess for Apache...\n";
$htaccessContent = "# Production header fixes
php_flag display_errors off
php_flag log_errors on
php_value error_log /var/log/php_errors.log

# Disable Xdebug in production
php_flag xdebug.mode off

# Security headers
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options DENY
Header always set X-XSS-Protection \"1; mode=block\"

# Compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>
";

file_put_contents('public/.htaccess', $htaccessContent);
echo "‚úÖ Created .htaccess with production settings\n";

// Fix 3: Create Nginx configuration snippet
echo "\n3. Creating Nginx configuration snippet...\n";
$nginxConfig = "# Nginx production configuration for Boson PHP
# Add this to your server block

location ~ \.php$ {
    fastcgi_pass unix:/var/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
    include fastcgi_params;
    
    # Production PHP settings
    fastcgi_param PHP_VALUE \"display_errors=0\";
    fastcgi_param PHP_VALUE \"log_errors=1\";
    fastcgi_param PHP_VALUE \"error_log=/var/log/php_errors.log\";
    fastcgi_param PHP_VALUE \"xdebug.mode=off\";
}

# Security headers
add_header X-Content-Type-Options nosniff;
add_header X-Frame-Options DENY;
add_header X-XSS-Protection \"1; mode=block\";

# Compression
gzip on;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
";

file_put_contents('nginx-production.conf', $nginxConfig);
echo "‚úÖ Created nginx-production.conf\n";

echo "\nüéâ Production fixes applied!\n";
echo "\nüìã Next steps:\n";
echo "1. Test the application: curl -I http://your-domain.com/\n";
echo "2. Check server error logs for any remaining issues\n";
echo "3. For Nginx: include nginx-production.conf in your server block\n";
echo "4. Restart web server: systemctl restart apache2/nginx\n";
echo "5. Clear caches: ./tools/cache-manager clear\n";

echo "\nüîç If issues persist:\n";
echo "1. Check PHP-FPM error logs\n";
echo "2. Verify PHP configuration with phpinfo()\n";
echo "3. Test with minimal PHP script\n";
echo "4. Contact server administrator\n";
